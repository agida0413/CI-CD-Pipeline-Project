name: HOTFIX RE-DEPLOY [CD]

on:
  push:
    branches:
      - master  # master 브랜치에 푸시될 때 실행

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.head.ref, 'hotfix-') # release 브랜치일 때만 실행
    steps:
      - uses: actions/checkout@v3

      - name: Get PR source branch name
        id: get_branch_name
        run: |
          BRANCH_NAME="${{ github.head_ref }}"  # PR을 보낸 브랜치 이름 추출
          echo "Branch name: $BRANCH_NAME"

          # 버전 값 추출 (예: release-0.1.0)
          if [[ $BRANCH_NAME =~ ^hotfix-(.*\..*)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          else
            echo "No version found in branch name."
          fi

      - name: Login Docker
      - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    
      - name: Backend Image hub push
        run: |
          docker build -f ./backend/Dockerfile.deploy -t kimyong120413/cicdbackend:${{ env.VERSION }} .
          docker push kimyong120413/cicdbackend:${{ env.VERSION }}

      - name: Frontend Image hub push
        run: |
            docker build -f ./frontend/Dockerfile.deploy -t kimyong120413/cicdfrontend:${{ env.VERSION }} .
            docker push kimyong120413/cicdfrontend:${{ env.VERSION }}

      - name: nginx Image hub push
        run: |
            docker build -f ./nginx/Dockerfile -t kimyong120413/cicdnginx:${{ env.VERSION }} .
            docker push kimyong120413/cicdnginx:${{ env.VERSION }}     


      - name: Generate deployment package
        run: zip -r deploy.zip docker-compose-deploy.yml 

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: docker-full
          environment_name: Docker-full-env 
          existing_bucket_name: ${{ secrets.AWS_BUCKET_NAME}}
          region: ap-northeast-2
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip

          
          