name: DEPLOY-FROM-RELEASE-*.*.* , DOCKER HUB [CD]

on:
  push:
    branches:
      - master
  
jobs:
  build:
    runs-on: ubuntu-latest
    # if: startsWith(github.event.ref, 'refs/heads/release-')
    steps:
      - uses: actions/checkout@v3


      - name: Run mysql
        run: |
           docker compose -f docker-compose-it.yml up -d mysql

      - name: Wait for MySQL
        run: |
          sleep 10  # 적절한 대기 시간 설정

      - name: Build Backend
        run: |
          docker compose -f docker-compose-it.yml up -d backend   

      - name: Run Integrate TEST/BACK-END
        run: |
          docker exec backend mvn clean verify

      - name: Run Integrate TEST/FRONT-END
        run: |
          docker build -f ./frontend/Dockerfile.it -t frontend-test . 


      - name: Get PR source branch name
        id: get_branch_name
        run: |
          BRANCH_NAME="${{ github.head_ref }}"  # PR을 보낸 브랜치 이름 추출
          echo "Branch name: $BRANCH_NAME"

          # 버전 값 추출 (예: release-0.1.0)
          if [[ $BRANCH_NAME =~ ^release-(.*\..*)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          else
            echo "No version found in branch name."
          fi

      - name: Login Docker
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    
      - name: Generate deployment package
        run: zip -r deploy.zip docker-compose-deploy.yml 

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: docker-full
          environment_name: Docker-full-env 
          existing_bucket_name: ${{ secrets.AWS_BUCKET_NAME}}
          region: ap-northeast-2
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip

          
          