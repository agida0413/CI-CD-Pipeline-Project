name: DEPLOY-FROM-RELEASE-*.*.* , DOCKER HUB [CD]

on:
  pull_request:
    branches:
      - master
    types: 
      - opened     # PR 생성 시
      - synchronize # PR이 업데이트될 때 (커밋 추가 등)
  
jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.head.ref, 'release-')
    steps:
      - uses: actions/checkout@v3



      # - name: Run mysql
      #   run: |
      #      docker compose -f docker-compose-it.yml up -d mysql

      # - name: Wait for MySQL
      #   run: |
      #     sleep 10  # 적절한 대기 시간 설정

      # - name: Build Backend
      #   run: |
      #     docker compose -f docker-compose-it.yml up -d backend   

      # - name: Run Integrate TEST/BACK-END
      #   run: |
      #     docker exec backend mvn clean verify

      # - name: Run Integrate TEST/FRONT-END
      #   run: |
      #     docker build -f ./frontend/Dockerfile.it -t frontend-test . 


      - name: Get PR source branch name
        id: get_branch_name
        run: |
          # 현재 참조가 master인 경우, head_ref는 사용할 수 없음
          # 대신, github.event.pull_request.head.ref 사용
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          echo "Pull Request source branch: $BRANCH_NAME"

          # 버전 값 추출 (예: release-0.0.1)
          if [[ $BRANCH_NAME =~ ^release-([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          else
            echo "No version found in branch name."
            exit 1  # 버전이 없을 경우 실패
          fi

      - name: Login Docker
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    
      #이미지 빌드 
      - name: Backend Image hub push
        run: |
          docker build -f ./backend/Dockerfile.deploy -t kimyong120413/cicdbackend:${{ env.VERSION }} .
          docker push kimyong120413/cicdbackend:${{ env.VERSION }}

      - name: Frontend Image hub push
        run: |
            docker build -f ./frontend/Dockerfile.deploy -t kimyong120413/cicdfrontend:${{ env.VERSION }} .
            docker push kimyong120413/cicdfrontend:${{ env.VERSION }}

      - name: nginx Image hub push
        run: |
            docker build -f ./nginx/Dockerfile -t kimyong120413/cicdnginx:${{ env.VERSION }} .
            docker push kimyong120413/cicdnginx:${{ env.VERSION }}      

      - name: Generate deployment package
        run:  zip -r deploy.zip . -x "*.git*" 

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: ${{secrets.AWS_APPLICATION_NAME}}
          environment_name: ${{secrets.AWS_ENV_NAME}}
          existing_bucket_name: ${{ secrets.AWS_BUCKET_NAME}}
          region: ap-northeast-2
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip

          
          