name: CI-it

on:
  push:
    branches:
      - feature/backend/**

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:  
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: 1234
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          while ! mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
            sleep 1
          done

      - name: Create database
        run: |
          mysql -h 127.0.0.1 -P 3306 -uroot -p1234 -e "CREATE DATABASE IF NOT EXISTS test;"

      - name: Run init.sql script
        run: |
            echo "$INIT_SQL_CONTENT" | mysql -h 127.0.0.1 -P 3306 -uroot -p1234 test
        env:
            INIT_SQL_CONTENT: ${{ secrets.INIT_SQL_CONTENT }}

      - name: Build Docker image
        run: |
          docker build -f ./backend/Dockerfile.it -t backendit ./backend

      - name: Run backend container
        run: |
          docker run --name backendit-container -d -p 8080:8080 backendit
          echo "Waiting for the backend service to start..."
          sleep 10  # 서비스가 시작될 시간을 줌

      - name: Check backend service health
        run: |
          for i in {1..10}; do
            if curl -f http://localhost:8080/your-endpoint; then
              echo "Service is up!"
              break
            fi
            echo "Waiting for service..."
            sleep 5
          done

      - name: Run integration tests
        run: |
          docker run --rm --network host backendit-test  # 테스트 컨테이너를 실행

      - name: Stop and remove backend container
        run: |
          docker stop backendit-container
          docker rm backendit-container
