name: CI-it

on:
  pull_request:
    branches:
      - release/*  # PR이 머지될 브랜치
    types: 
      - closed   
jobs:
  build:
    runs-on: ubuntu-latest
    steps:      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get source branch name
        id: get_branch_name
        run: |
          SOURCE_BRANCH="${GITHUB_HEAD_REF}"
          if [[ $SOURCE_BRANCH =~ ^release-([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          else
            echo "No valid release branch found."
          fi

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Run mysql
        run: |
           docker compose -f docker-compose-it.yml up -d mysql

      - name: Wait for MySQL
        run: |
          sleep 10  # 적절한 대기 시간 설정

      - name: Build Backend
        run: |
          docker compose -f docker-compose-it.yml up -d backend   

      - name: Run Integrate TEST/BACK-END
        run: |
          docker exec backend mvn clean verify

      - name: Run Integrate TEST/FRONT-END
        run: |
          docker build -f ./frontend/Dockerfile.it -t frontend-test . 
          
      #이미지 빌드 
      - name: Backend Image hub push
        run: |
          docker build -f ./backend/Dockerfile.deploy -t kimyong120413/cicdbackend:${{ env.VERSION }} .
          docker push kimyong120413/cicdbackend:${{ env.VERSION }}

      - name: Frontend Image hub push
        run: |
            docker build -f ./frontend/Dockerfile.deploy -t kimyong120413/cicdfrontend:${{ env.VERSION }}
            docker push kimyong120413/cicdfrontend:${{ env.VERSION }}

      - name: nginx Image hub push
        run: |
            docker build -f ./nginx/Dockerfile -t kimyong120413/cicdnginx:${{ env.VERSION }}
            docker push kimyong120413/cicdnginx:${{ env.VERSION }}      
  


     
     
